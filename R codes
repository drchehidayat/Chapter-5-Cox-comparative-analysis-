R Codes for comparative analysis of cox proportional hazard regression
---
title: "Comparative Cox Analysis for paper 2"
author: "Che Muhammad Nur Hidayat Che Nawi"
date: "`r format(Sys.time(), '%d %B, %Y')`"
output: rmdformats::material
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
We load necessary packages and data
We mainly use gtsummary and tidyverse for the analyses
```{r, include=FALSE}
# Prepare environment and load data
library(gtsummary)
library(tidyverse)
stroke <- read.csv("stroke.csv")
str(stroke) 
str_mod <- read.csv("stroke.csv")
str(str_mod)
```

Lets do some data wrangling for descriptive analysis and modelling
```{r, include=FALSE}
# Data wrangling
## For descriptive
# change numerical variable to factor
stroke$age = as.numeric(stroke$age) 
stroke$dur_days = as.numeric(stroke$dur_days)
stroke$dur_month = as.numeric(stroke$dur_month)
stroke$status = as.numeric(stroke$status)
stroke$gcs_reduct = as.numeric(stroke$gcs_reduct)
# change categorical variable to factor
stroke <- stroke %>% mutate_if(is.integer, ~as.factor(.)) %>% 
  select(age, dur_days, dur_month, status, gcs_reduct,everything())
# Change factor labels====
stroke$ss <- factor(stroke$ss, labels = c("HRPZ", "HSNZ", "HSP", "HUSM", "PPUKM"))
stroke$sex <- factor(stroke$sex, labels = c("Female", "Male"))
stroke$ethnicity <- factor(stroke$ethnicity, labels = c("Malay", "Chinese", "Indian", "Others"))
stroke$married <- factor(stroke$married, labels = c("Married", "Single", "Others"))
stroke$dm <- factor(stroke$dm, labels = c("No", "Yes"))
stroke$hpt <- factor(stroke$hpt, labels = c("No", "Yes"))
stroke$ckd <- factor(stroke$ckd, labels = c("No", "Yes"))
stroke$af <- factor(stroke$af, labels = c("No", "Yes"))
stroke$hf_ihd <- factor(stroke$hf_ihd, labels = c("No", "Yes"))
stroke$lipid <- factor(stroke$lipid, labels = c("No", "Yes"))
stroke$smoke <- factor(stroke$smoke, labels = c("No", "Yes"))
stroke$who <- factor(stroke$who, labels = c("Ischemic stroke", "Non ischemic stroke"))
stroke$nihss <- factor(stroke$nihss, labels = c("No stroke symptoms (0)", 
                                                        "Minor stroke (1-4)",
                                                        "Moderate stroke (5-15)",
                                                        "Moderate to severe stroke (16-20)",
                                                        "Severe stroke (21-42)"))
stroke$iv_thrombolysis <- factor(stroke$iv_thrombolysis, labels = c("No", "Yes"))
stroke$iv_thrombectomy <- factor(stroke$iv_thrombectomy, labels = c("No", "Yes"))
stroke$status <- factor(stroke$status, labels = c("Censored", "Death"))
glimpse(stroke)
```
```{r, include=FALSE}
# Data wrangling for stroke modelling
# change numerical to factor
str_mod$age = as.numeric(str_mod$age) 
str_mod$dur_days = as.numeric(str_mod$dur_days)
str_mod$dur_month = as.numeric(str_mod$dur_month)
str_mod$status = as.numeric(str_mod$status)
str_mod$gcs_reduct = as.numeric(str_mod$gcs_reduct)

# Change categorical variables to factor
str_mod <- str_mod %>% mutate_if(is.integer, ~as.factor(.)) %>% 
  select(age, dur_days, dur_month, status, gcs_reduct,everything())
# Change factor labels====
str_mod$ss <- factor(str_mod$ss, labels = c("HRPZ", "HSNZ", "HSP", "HUSM", "PPUKM"))
str_mod$sex <- factor(str_mod$sex, labels = c("Female", "Male"))
str_mod$ethnicity <- factor(str_mod$ethnicity, labels = c("Malay", "Chinese", "Indian", "Others"))
str_mod$married <- factor(str_mod$married, labels = c("Married", "Single", "Others"))
str_mod$dm <- factor(str_mod$dm, labels = c("No", "Yes"))
str_mod$hpt <- factor(str_mod$hpt, labels = c("No", "Yes"))
str_mod$ckd <- factor(str_mod$ckd, labels = c("No", "Yes"))
str_mod$af <- factor(str_mod$af, labels = c("No", "Yes"))
str_mod$hf_ihd <- factor(str_mod$hf_ihd, labels = c("No", "Yes"))
str_mod$lipid <- factor(str_mod$lipid, labels = c("No", "Yes"))
str_mod$smoke <- factor(str_mod$smoke, labels = c("No", "Yes"))
str_mod$who <- factor(str_mod$who, labels = c("Ischemic stroke", "Non ischemic stroke"))
str_mod$nihss <- factor(str_mod$nihss, labels = c("No stroke symptoms (0)", 
                                                        "Minor stroke (1-4)",
                                                        "Moderate stroke (5-15)",
                                                        "Moderate to severe stroke (16-20)",
                                                        "Severe stroke (21-42)"))
str_mod$iv_thrombolysis <- factor(str_mod$iv_thrombolysis, labels = c("No", "Yes"))
str_mod$iv_thrombectomy <- factor(str_mod$iv_thrombectomy, labels = c("No", "Yes"))
glimpse(str_mod)
```
# Participant characteristics
- We describe data as mean (SD) and frequency (%) when appropriate
- We stratified the descriptive analysis according to status on follow up, either alive or death
- To make comparisons, we employed statistical tests including the Wilcoxon rank sum test, Pearson's Chi-squared test, and Fisher's exact test.
```{r, echo=FALSE}
# Descriptive analysis by gt summary
## By status
library(gtsummary)
# Choose and rearrange variables
stroke2 <- stroke %>% gtsummary::select(age, ss, sex, ethnicity, married, dm, hpt, ckd, af, hf_ihd, lipid, smoke, who, gcs_reduct, nihss, iv_thrombolysis, iv_thrombectomy, dur_month, status)
desc <- tbl_summary(stroke2,
                    by = status,
                    statistic = list(all_continuous() ~ "{mean} ({sd})",                                                               all_categorical() ~ "{n} ({p}%)"),
                    digits = list(all_continuous() ~ 2,                                                                             all_categorical() ~ 1),
                    label = list(age ~ "Age", 
                                 ss ~ "Study sites",
                                 sex ~ "Gender",
                                 ethnicity ~ "Ethnicity",
                                 married ~ "Marital status",
                                 dm ~ "Diabetes mellitus, Yes",
                                 hpt ~ "Hypertension, Yes",
                                 ckd ~ "Chronic Kidney Disease, Yes",
                                 af ~ "Atrial fibrillation, Yes",
                                 hf_ihd ~ "Heart disease, Yes",
                                 lipid ~ "Hyperlipidemia, Yes",
                                 smoke ~ "Smoking status, Yes",
                                 who ~ "Diagnosis (WHO)",
                                 gcs_reduct ~ "GCS reduction",
                                 nihss ~ "NIH stroke scale (NIHSS)",
                                 iv_thrombolysis ~ "Intervention (Thrombolysis), Yes",
                                 iv_thrombectomy ~ "Intervention (Thrombectomy), Yes",
                                 dur_month ~ "Time interval in month"))
desc %>%
  add_p %>% 
  add_overall() %>% 
  bold_labels() %>% 
  italicize_levels() 
```
# 3-months, 1-year and 3-year stroke survival rate among stroke patients 
- An important aspect of survival analysis frequently revolves around determining the likelihood of enduring past a specific time frame, denoted as "x" years. 
- To illustrate, we might want to calculate the probability of surviving for 3 months, 1 year, and 3 years following a diagnosis of stroke.
```{r, include=FALSE}
## Load Library
library(survival)
library(survminer)
library(scales)
```
```{r, echo=FALSE, warning=FALSE, message=FALSE}
fit1 <- survfit(Surv(dur_month, status)~ 1, str_mod) # Overall survival rate
fit2 <- survfit(Surv(dur_month, status)~ sex, str_mod) # Survival rate according to gender
fit3 <- survfit(Surv(dur_month, status)~ ethnicity, str_mod) # Survival rate according to ethnicity
fit4 <- survfit(Surv(dur_month, status)~ who, str_mod) # Survival rate according to stroke diagnosis

life_table <- list(fit1, fit2, fit3, fit4) %>% 
  tbl_survfit(times= c(3, 12, 36)) %>% 
  modify_header(update = list(
    stat_1 ~ "**3-month survival (95% CI)**",
    stat_2 ~ "**1-year survival (95% CI)**",
    stat_3 ~ "**3-years survival (95% CI)**"
  )) %>% add_n() %>% add_p() %>% 
  bold_labels() %>% 
  italicize_levels()
life_table
```
# Prediction of mortality among stroke patients
## The comparison between COX-GCS and COX-NIHSSmodels in predicting stroke mortality
- We perform comparative analysis to evaluate the prognostic value of each stroke severity scales by using confirmatory analysis. 
- Ininitally, we fit an unadjusted cox model for each stroke severity scale, i.e., the GCS, NIHSS. 
- Next, we fit an adjusted cox model for sociodemographic characteristics, co morbidities and intervention
```{r, include=FALSE}
library(forcats)
#ss
fct_count(str_mod$ss)
str_mod$ss2 <- fct_collapse(str_mod$ss,
                               NCR=c("PPUKM", "HSP"),
                               ECR=c("HRPZ", "HSNZ", "HUSM"))
str_mod$ss2 <- relevel(str_mod$ss2, ref = "NCR")
fct_count(str_mod$ss2)
```
```{r, include=FALSE}
## Prepare dataset for GCS and NIHSS
str_gcs <- str_mod %>% gtsummary::select(age, sex, married, ethnicity, ss2, dm, hpt, ckd, af, hf_ihd, lipid, smoke, who, gcs_reduct, iv_thrombolysis, iv_thrombectomy, dur_month, status)
str_nihss <- str_mod %>% gtsummary::select(age, sex, married, ethnicity, ss2, dm, hpt, ckd, af, hf_ihd, lipid, smoke, who, nihss, iv_thrombolysis, iv_thrombectomy, dur_month, status)
```
```{r, include=FALSE}
## GCS Cox Model
### Unadjusted model
coxgcs_uv <- coxph(Surv(dur_month, status)~ gcs_reduct, str_gcs)%>% 
  tbl_regression(exponentiate = TRUE, 
                           label = list(
                                 gcs_reduct ~ "Glasgow coma scale (GCS) reduction"
                                 )) 

coxgcs_uv
```
```{r, include=FALSE}
### Adjusted model
coxgcs_mv <- coxph(Surv(dur_month, status)~ gcs_reduct+age+sex+married+ethnicity+ss2+dm+hpt+ckd+af+hf_ihd+lipid+smoke+who+iv_thrombolysis+iv_thrombectomy, str_gcs) %>% 
  tbl_regression(exponentiate = TRUE, 
                             include = "gcs_reduct",
                           label = list(
                                 gcs_reduct ~ "Glasgow coma scale (GCS) reduction")) 
coxgcs_mv
```
```{r, include=FALSE}
gcs_merge <- tbl_merge(list(coxgcs_uv, coxgcs_mv),
                       tab_spanner = c("**Unadjusted model**", "**Adjusted model**"))
gcs_merge
```
```{r, include=FALSE}
## NIHSS Cox Model
### Unadjusted model
coxnihss_uv <- coxph(Surv(dur_month, status)~ nihss, str_nihss) %>% 
  tbl_regression(exponentiate = TRUE, 
                           label = list(
                                 nihss ~ "NIH stroke scale (NIHSS)"
                                 )) 
coxnihss_uv
```
```{r, include=FALSE}
### Adjusted model
coxnihss_mv <- coxph(Surv(dur_month, status)~ nihss+age+sex+married+ethnicity+ss2+dm+hpt+ckd+af+hf_ihd+lipid+smoke+who+iv_thrombolysis+iv_thrombectomy, str_nihss) %>% 
  tbl_regression(exponentiate = TRUE, 
                 include = "nihss",
                           label = list(
                                 nihss ~ "NIH stroke scale (NIHSS)")) 
coxnihss_mv
```
```{r, include=FALSE}
nihss_merge <- tbl_merge(list(coxnihss_uv, coxnihss_mv),
                       tab_spanner = c("**Unadjusted model**", "**Adjusted model**"))
nihss_merge
```


```{r, include=FALSE}

## Combine all model together with tbl_stack
```{r, echo=FALSE}
model_stack <- tbl_stack(list(gcs_merge, nihss_merge))
model_stack %>% 
  bold_labels() %>% 
  italicize_levels()
```
# Evaluation of the model performace
```{r, include=FALSE}
#NON GT
coxgcs_mv_ngt <- coxph(Surv(dur_month, status)~ gcs_reduct+age+sex+married+ethnicity+ss2+dm+hpt+ckd+af+hf_ihd+lipid+smoke+who+iv_thrombolysis+iv_thrombectomy, str_gcs)
coxnihss_mv_ngt <- coxph(Surv(dur_month, status)~ nihss+age+sex+married+ethnicity+ss2+dm+hpt+ckd+af+hf_ihd+lipid+smoke+who+iv_thrombolysis+iv_thrombectomy, str_nihss)
```
Now we will evaluate the performance of the model with likelihood based test, C-index and visualization of the fitted model.
A good model have attributes of:
- Lower p-value
- Lower AIC
- Higher C-index
- Gradual decline of the curve 

```{r, include=FALSE}
## Likelihood based test
### Likelihood ratio test
library(lmtest)
lrt_gcs_nihss <- lrtest(coxgcs_mv_ngt, coxnihss_mv_ngt)
lrt_gcs_nihss
```
```{r, include=FALSE}
# lets compute the AIC for each model
aic_values <- AIC(coxgcs_mv_ngt, coxnihss_mv_ngt)
aic_values
```
```{r, include=FALSE}
# C-index
ctest <- concordance(coxgcs_mv_ngt, coxnihss_mv_ngt)
ctest
```
```{r, echo=FALSE, message=FALSE, warning=FALSE}
## visualize model comparison
# Load the required libraries
library(survival)
library(ggplot2)

# Create Kaplan-Meier survival curves for each model with confidence intervals
surv1 <- survfit(coxgcs_mv_ngt)
surv2 <- survfit(coxnihss_mv_ngt)
# Combine the survival data into a data frame
surv_data <- data.frame(
  time = surv1$time,
  surv1 = surv1$surv,
  surv2 = surv2$surv,
  surv3 = surv3$surv,
  upper1 = surv1$upper,
  lower1 = surv1$lower,
  upper2 = surv2$upper,
  lower2 = surv2$lower,
  upper3 = surv3$upper,
  lower3 = surv3$lower
)
# Create the Kaplan-Meier plot using ggplot2
p <- ggplot(surv_data, aes(x = time)) +
  geom_step(aes(y = surv1, color = "Cox GCS model", fill = "Cox GCS model"), size = 1) +
  geom_step(aes(y = surv2, color = "Cox NIHSS model", fill = "Cox NIHSS model"), size = 1) +
  geom_step(aes(y = surv3, color = "Cox mRS model", fill = "Cox mRS model"), size = 1) +
  geom_ribbon(aes(ymin = lower1, ymax = upper1, fill = "Cox GCS model"), alpha = 0.2) +
  geom_ribbon(aes(ymin = lower2, ymax = upper2, fill = "Cox NIHSS model"), alpha = 0.2) +
  geom_ribbon(aes(ymin = lower3, ymax = upper3, fill = "Cox mRS model"), alpha = 0.2) +
  scale_color_manual(values = c("Cox GCS model" = "blue", "Cox NIHSS model" = "red", "Cox mRS model" = "green")) +
  scale_fill_manual(
    values = c("Cox GCS model" = "blue", "Cox NIHSS model" = "red", "Cox mRS model" = "green"),
    guide = guide_legend(title = "(95% confidence interval)")
  ) +
  labs(
    title = "",
    x = "Time (in months)",
    y = "Survival Probability"
  ) +
  theme_minimal() +
  guides(color = guide_legend(title = "Cox Proportional Hazard Models", override.aes = list(fill = NA)))
p
```
